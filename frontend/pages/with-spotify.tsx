import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import { motion } from "framer-motion";
import { toTopVariants } from "../src/common/AniVarients";
import useSpotifyAuth from "../src/utils/useSpotifyAuth";
import SpotifyWebApi from "spotify-web-api-node";
import SpotifyApi from "../pages/api/spotifyApi";
const WithSpotify: NextPage = () => {
  const [code, setCode] = useState("");
  const [topArtists, setTopArtists] = useState([]);
  const [topTracks, setTopTracks] = useState([]);
  const accessToken = useSpotifyAuth(code);
  const spotifyApi = new SpotifyWebApi({
    clientId: process.env.SPOTIFY_CLIENT,
  });
  useEffect(() => {
    console.log("accessToken", accessToken);
    if (!accessToken) return;
    spotifyApi.setAccessToken(accessToken);
  }, [accessToken]);

  useEffect(() => {
    const newCode = new URLSearchParams(window.location.search).get("code");
    setCode(newCode);
  }, []);
  const handleGetMyTop = async () => {
    spotifyApi.setAccessToken(accessToken);
    /* Get a User’s Top Artists*/
    // const res = await SpotifyApi.getMyTop();
    // console.log("getMyTopArtists", res);

    spotifyApi.getMyTopArtists().then(
      function (data) {
        let topArtists = data.body.items;
        setTopArtists(topArtists);
        console.log("topArtists", topArtists);
      },
      function (err) {
        console.log("Something went wrong!", err);
      }
    );

    /* Get a User’s Top Tracks*/
    spotifyApi.getMyTopTracks().then(
      function (data) {
        let topTracks = data.body.items;
        setTopTracks(topTracks);
        console.log("topTracks", topTracks);
      },
      function (err) {
        console.log("Something went wrong!", err);
      }
    );
  };
  // useEffect(() => {
  //   handleGetMyTop();
  // }, []);

  return (
    <div className="cs-main-bg-theme">
      <Head>
        <title>SameVibes</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <motion.div
        className="no-scrollbar container mx-auto h-full overflow-y-auto pb-16 pt-16"
        initial="initial"
        animate="enter"
        exit="exit"
        variants={toTopVariants}
      >
        <div className="flex justify-center my-8">

        <div
          className=" cs-border-btn-t-100 w-fit cursor-pointer rounded-xl px-2 py-1 text-lg font-medium text-gray-400 transition-colors duration-300 dark:text-gray-400 dark:hover:text-white"
          onClick={handleGetMyTop}
        >
          Get My Profile
        </div>
        </div>
        <div className="flex justify-around">
          <div className="flex flex-col">
            {topArtists.map((artist, i) => {
              return (
                <div key={`artist-${i}`}>
                  {i + 1}.<span> {artist.name}</span>
                </div>
              );
            })}
          </div>
          <div className="flex flex-col">
            {topTracks.map((track, i) => {
              return (
                <div key={`track-${i}`}>
                  {i + 1}.<span> {track.name}</span> -{" "}
                  <span className="text-gray-400">{track.artists[0].name}</span>
                </div>
              );
            })}
          </div>
        </div>
      </motion.div>
    </div>
  );
};

export default WithSpotify;
